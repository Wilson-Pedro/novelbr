<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.novelsbr.backend.controllers.AuthControllerTest" time="4.871" tests="2" errors="1" skipped="0" failures="1">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\spring-react\novelbr\backend\target\test-classes;C:\spring-react\novelbr\backend\target\classes;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.4\spring-boot-starter-data-jpa-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.4\spring-boot-starter-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.4\spring-boot-starter-logging-3.4.4.jar;C:\Users\willl\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\willl\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\willl\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\willl\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\willl\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\willl\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\willl\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.4\spring-boot-starter-jdbc-3.4.4.jar;C:\Users\willl\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\willl\.m2\repository\org\springframework\spring-jdbc\6.2.5\spring-jdbc-6.2.5.jar;C:\Users\willl\.m2\repository\org\hibernate\orm\hibernate-core\6.6.11.Final\hibernate-core-6.6.11.Final.jar;C:\Users\willl\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\willl\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\willl\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\willl\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\willl\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\willl\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\willl\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\willl\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\willl\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\willl\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\willl\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\willl\.m2\repository\org\springframework\data\spring-data-jpa\3.4.4\spring-data-jpa-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\data\spring-data-commons\3.4.4\spring-data-commons-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\spring-orm\6.2.5\spring-orm-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-context\6.2.5\spring-context-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-tx\6.2.5\spring-tx-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-beans\6.2.5\spring-beans-6.2.5.jar;C:\Users\willl\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\willl\.m2\repository\org\springframework\spring-aspects\6.2.5\spring-aspects-6.2.5.jar;C:\Users\willl\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.4\spring-boot-starter-web-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.4\spring-boot-starter-json-3.4.4.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.4\spring-boot-starter-tomcat-3.4.4.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\willl\.m2\repository\org\springframework\spring-web\6.2.5\spring-web-6.2.5.jar;C:\Users\willl\.m2\repository\io\micrometer\micrometer-observation\1.14.5\micrometer-observation-1.14.5.jar;C:\Users\willl\.m2\repository\io\micrometer\micrometer-commons\1.14.5\micrometer-commons-1.14.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-webmvc\6.2.5\spring-webmvc-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-expression\6.2.5\spring-expression-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.4\spring-boot-devtools-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot\3.4.4\spring-boot-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.4\spring-boot-autoconfigure-3.4.4.jar;C:\Users\willl\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.4\spring-boot-starter-test-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-test\3.4.4\spring-boot-test-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.4\spring-boot-test-autoconfigure-3.4.4.jar;C:\Users\willl\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\willl\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\willl\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\willl\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\willl\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\willl\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\willl\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\willl\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\willl\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\willl\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\willl\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\willl\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\willl\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\willl\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\willl\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\willl\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\willl\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\willl\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\willl\.m2\repository\org\springframework\spring-core\6.2.5\spring-core-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-jcl\6.2.5\spring-jcl-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-test\6.2.5\spring-test-6.2.5.jar;C:\Users\willl\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.4\spring-boot-starter-security-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\spring-aop\6.2.5\spring-aop-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-config\6.4.4\spring-security-config-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-web\6.4.4\spring-security-web-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-test\6.4.4\spring-security-test-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-core\6.4.4\spring-security-core-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-crypto\6.4.4\spring-security-crypto-6.4.4.jar;C:\Users\willl\.m2\repository\com\auth0\java-jwt\4.5.0\java-jwt-4.5.0.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\willl\.m2\repository\com\googlecode\owasp-java-html-sanitizer\owasp-java-html-sanitizer\20211018.1\owasp-java-html-sanitizer-20211018.1.jar;C:\Users\willl\.m2\repository\com\google\guava\guava\30.1-jre\guava-30.1-jre.jar;C:\Users\willl\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\willl\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\willl\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\willl\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\willl\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\willl\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\sts-4.17.1.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.5.v20221102-0933\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\willl\AppData\Local\Temp\surefire12635542952576157243\surefirebooter-20250707193630515_3.jar C:\Users\willl\AppData\Local\Temp\surefire12635542952576157243 2025-07-07T19-36-27_402-jvmRun1 surefire-20250707193630515_1tmp surefire_0-20250707193630515_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\spring-react\novelbr\backend\target\test-classes;C:\spring-react\novelbr\backend\target\classes;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.4\spring-boot-starter-data-jpa-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.4\spring-boot-starter-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.4\spring-boot-starter-logging-3.4.4.jar;C:\Users\willl\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\willl\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\willl\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\willl\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\willl\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\willl\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\willl\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.4\spring-boot-starter-jdbc-3.4.4.jar;C:\Users\willl\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\willl\.m2\repository\org\springframework\spring-jdbc\6.2.5\spring-jdbc-6.2.5.jar;C:\Users\willl\.m2\repository\org\hibernate\orm\hibernate-core\6.6.11.Final\hibernate-core-6.6.11.Final.jar;C:\Users\willl\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\willl\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\willl\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\willl\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\willl\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\willl\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\willl\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\willl\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\willl\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\willl\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\willl\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\willl\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\willl\.m2\repository\org\springframework\data\spring-data-jpa\3.4.4\spring-data-jpa-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\data\spring-data-commons\3.4.4\spring-data-commons-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\spring-orm\6.2.5\spring-orm-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-context\6.2.5\spring-context-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-tx\6.2.5\spring-tx-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-beans\6.2.5\spring-beans-6.2.5.jar;C:\Users\willl\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\willl\.m2\repository\org\springframework\spring-aspects\6.2.5\spring-aspects-6.2.5.jar;C:\Users\willl\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.4\spring-boot-starter-web-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.4\spring-boot-starter-json-3.4.4.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.4\spring-boot-starter-tomcat-3.4.4.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\willl\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\willl\.m2\repository\org\springframework\spring-web\6.2.5\spring-web-6.2.5.jar;C:\Users\willl\.m2\repository\io\micrometer\micrometer-observation\1.14.5\micrometer-observation-1.14.5.jar;C:\Users\willl\.m2\repository\io\micrometer\micrometer-commons\1.14.5\micrometer-commons-1.14.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-webmvc\6.2.5\spring-webmvc-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-expression\6.2.5\spring-expression-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.4\spring-boot-devtools-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot\3.4.4\spring-boot-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.4\spring-boot-autoconfigure-3.4.4.jar;C:\Users\willl\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.4\spring-boot-starter-test-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-test\3.4.4\spring-boot-test-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.4\spring-boot-test-autoconfigure-3.4.4.jar;C:\Users\willl\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\willl\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\willl\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\willl\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\willl\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\willl\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\willl\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\willl\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\willl\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\willl\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\willl\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\willl\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\willl\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\willl\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\willl\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\willl\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\willl\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\willl\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\willl\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\willl\.m2\repository\org\springframework\spring-core\6.2.5\spring-core-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-jcl\6.2.5\spring-jcl-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\spring-test\6.2.5\spring-test-6.2.5.jar;C:\Users\willl\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\willl\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.4\spring-boot-starter-security-3.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\spring-aop\6.2.5\spring-aop-6.2.5.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-config\6.4.4\spring-security-config-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-web\6.4.4\spring-security-web-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-test\6.4.4\spring-security-test-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-core\6.4.4\spring-security-core-6.4.4.jar;C:\Users\willl\.m2\repository\org\springframework\security\spring-security-crypto\6.4.4\spring-security-crypto-6.4.4.jar;C:\Users\willl\.m2\repository\com\auth0\java-jwt\4.5.0\java-jwt-4.5.0.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\willl\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\willl\.m2\repository\com\googlecode\owasp-java-html-sanitizer\owasp-java-html-sanitizer\20211018.1\owasp-java-html-sanitizer-20211018.1.jar;C:\Users\willl\.m2\repository\com\google\guava\guava\30.1-jre\guava-30.1-jre.jar;C:\Users\willl\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\willl\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\willl\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\willl\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\willl\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\willl\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\willl"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-10-18"/>
    <property name="java.home" value="C:\sts-4.17.1.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.5.v20221102-0933\jre"/>
    <property name="file.separator" value="\"/>
    <property name="style.color" value="always"/>
    <property name="basedir" value="C:\spring-react\novelbr\backend"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\willl\AppData\Local\Temp\surefire12635542952576157243\surefirebooter-20250707193630515_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.5+8"/>
    <property name="user.name" value="willl"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.5+8"/>
    <property name="localRepository" value="C:\Users\willl\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\willl\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="17.0.5"/>
    <property name="user.dir" value="C:\spring-react\novelbr\backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="17416"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\sts-4.17.1.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.5.v20221102-0933\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/sts-4.17.1.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.5.v20221102-0933/jre/bin/server;C:/sts-4.17.1.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.5.v20221102-0933/jre/bin;C:\Program Files\Java\jdk-17\bin;%SPARK_HOME%\bin;%HADOOP_HOME%\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\zulu17.36.17-ca-jdk17.0.4.1-win_x64\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files (x86)\dotnet\;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\apache-maven-3.9.4\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\PuTTY\;C:\Gradle\gradle-8.8\bin;C:\Users\willl\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\willl\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\willl\AppData\Local\Programs\Python\Python310\;C:\Users\willl\AppData\Local\Microsoft\WindowsApps;C:\Users\willl\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\willl\AppData\Local\GitHubDesktop\bin;C:\php;C:\Users\willl\AppData\Roaming\Composer\vendor\bin;C:\Users\willl\AppData\Local\ComposerSetup\bin;C:\Program Files (x86)\Nmap;C:\Program Files\Java\jdk-17\bin;C:\Users\willl\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Users\willl\AppData\Roaming\npm;C:\sts-4.17.1.RELEASE;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.5+8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="save" classname="com.novelsbr.backend.controllers.AuthControllerTest" time="0.155">
    <error message="could not execute statement [Referential integrity constraint violation: &quot;FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT))&quot;; SQL statement:&#10;delete from tbl_novel where id=? [23503-232]] [delete from tbl_novel where id=?]; SQL [delete from tbl_novel where id=?]; constraint [FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT)); SQL statement:&#10;delete from tbl_novel where id=? [23503-232]]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [Referential integrity constraint violation: "FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT))"; SQL statement:
delete from tbl_novel where id=? [23503-232]] [delete from tbl_novel where id=?]; SQL [delete from tbl_novel where id=?]; constraint [FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT)); SQL statement:
delete from tbl_novel where id=? [23503-232]]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy150.deleteAll(Unknown Source)
	at com.novelsbr.backend.controllers.AuthControllerTest.save(AuthControllerTest.java:58)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Referential integrity constraint violation: "FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT))"; SQL statement:
delete from tbl_novel where id=? [23503-232]] [delete from tbl_novel where id=?]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.AbstractDeleteCoordinator.doStaticDelete(AbstractDeleteCoordinator.java:279)
	at org.hibernate.persister.entity.mutation.AbstractDeleteCoordinator.delete(AbstractDeleteCoordinator.java:87)
	at org.hibernate.action.internal.EntityDeleteAction.execute(EntityDeleteAction.java:131)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 16 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Referential integrity constraint violation: "FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT))"; SQL statement:
delete from tbl_novel where id=? [23503-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:362)
	at org.h2.constraint.ConstraintReferential.checkRowRefTable(ConstraintReferential.java:379)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:253)
	at org.h2.table.Table.fireConstraints(Table.java:1227)
	at org.h2.table.Table.fireAfterRow(Table.java:1245)
	at org.h2.command.dml.Delete.update(Delete.java:92)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:139)
	at org.h2.command.Command.executeUpdate(Command.java:304)
	at org.h2.command.Command.executeUpdate(Command.java:248)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:213)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:172)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 36 more
]]></error>
    <system-out><![CDATA[2025-07-07T19:37:00.751-03:00  INFO 17416 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.novelsbr.backend.controllers.AuthControllerTest]: AuthControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07T19:37:00.838-03:00  INFO 17416 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.novelsbr.backend.BackendApplication for test class com.novelsbr.backend.controllers.AuthControllerTest
2025-07-07T19:37:00.883-03:00  INFO 17416 --- [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-07T19:37:00.965-03:00  INFO 17416 --- [           main] c.n.b.controllers.AuthControllerTest     : Starting AuthControllerTest using Java 17.0.5 with PID 17416 (started by willl in C:\spring-react\novelbr\backend)
2025-07-07T19:37:00.966-03:00  INFO 17416 --- [           main] c.n.b.controllers.AuthControllerTest     : No active profile set, falling back to 1 default profile: "default"
2025-07-07T19:37:01.699-03:00  INFO 17416 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07T19:37:01.853-03:00  INFO 17416 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 150 ms. Found 5 JPA repository interfaces.
2025-07-07T19:37:02.150-03:00  INFO 17416 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-07-07T19:37:02.152-03:00  INFO 17416 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-07-07T19:37:02.159-03:00  INFO 17416 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-07-07T19:37:02.165-03:00  INFO 17416 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07T19:37:02.181-03:00  INFO 17416 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-07T19:37:02.236-03:00  INFO 17416 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07T19:37:02.240-03:00  INFO 17416 --- [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
Hibernate: 
    create global temporary table HT_tbl_comment_novel(id bigint not null, primary key (id)) TRANSACTIONAL
Hibernate: 
    create global temporary table HTE_tbl_comment_novel(rn_ integer not null, author_id bigint, comment_father bigint, date_registration timestamp(6), id bigint, text TEXT, comment_type enum ('CHAPTER', 'NOVEL'), primary key (rn_)) TRANSACTIONAL
Hibernate: 
    create global temporary table HTE_tbl_comment_novel(rn_ integer not null, author_id bigint, comment_father bigint, date_registration timestamp(6), id bigint, novel_id bigint, text TEXT, comment_type enum ('CHAPTER', 'NOVEL'), primary key (rn_)) TRANSACTIONAL
Hibernate: 
    create global temporary table HTE_tbl_comment(rn_ integer not null, author_id bigint, chapter_id bigint, comment_father bigint, date_registration timestamp(6), id bigint, text TEXT, comment_type enum ('CHAPTER', 'NOVEL'), primary key (rn_)) TRANSACTIONAL
2025-07-07T19:37:02.669-03:00  INFO 17416 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists tbl_author cascade 
Hibernate: 
    drop table if exists tbl_chapter cascade 
Hibernate: 
    drop table if exists tbl_comment cascade 
Hibernate: 
    drop table if exists tbl_comment_chapter cascade 
Hibernate: 
    drop table if exists tbl_comment_novel cascade 
Hibernate: 
    drop table if exists tbl_gender cascade 
Hibernate: 
    drop table if exists tbl_novel cascade 
Hibernate: 
    drop table if exists tbl_novel_genero cascade 
Hibernate: 
    drop sequence if exists tbl_comment_seq
Hibernate: 
    create sequence tbl_comment_seq start with 1 increment by 50
Hibernate: 
    create table tbl_author (
        date_registrion timestamp(6),
        id bigint generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        username varchar(255),
        role enum ('AUTHOR','USER'),
        primary key (id)
    )
Hibernate: 
    create table tbl_chapter (
        chapter_number integer,
        date_registration timestamp(6),
        id bigint generated by default as identity,
        novel_id bigint,
        chapter_text TEXT,
        title varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tbl_comment (
        author_id bigint,
        comment_father bigint,
        date_registration timestamp(6),
        id bigint not null,
        text TEXT,
        comment_type enum ('CHAPTER','NOVEL'),
        primary key (id)
    )
Hibernate: 
    create table tbl_comment_chapter (
        author_id bigint,
        chapter_id bigint,
        comment_father bigint,
        date_registration timestamp(6),
        id bigint not null,
        text TEXT,
        comment_type enum ('CHAPTER','NOVEL'),
        primary key (id)
    )
Hibernate: 
    create table tbl_comment_novel (
        author_id bigint,
        comment_father bigint,
        date_registration timestamp(6),
        id bigint not null,
        novel_id bigint,
        text TEXT,
        comment_type enum ('CHAPTER','NOVEL'),
        primary key (id)
    )
Hibernate: 
    create table tbl_gender (
        id integer not null,
        gender_type enum ('ACTION','ADULT','ADVENTURE','DRAMA','DYSTOPIA','FANTASY','HISTORICAL','HORROR','MAGICAL','MEDIEVAL','MYSTERY','POLITICAL','ROMANCE','SCIENCE_FICTION','SHOUJO','SLICE_OF_LIFE','SUSPENSEFUL','TERROR','THRILLER','WESTERN','YAOI'),
        primary key (id)
    )
Hibernate: 
    create table tbl_novel (
        author_id bigint,
        date_registrion timestamp(6),
        id bigint generated by default as identity,
        image_uri varchar(255),
        novel_name varchar(255),
        synopsis TEXT,
        primary key (id)
    )
Hibernate: 
    create table tbl_novel_genero (
        genero_id integer not null,
        novel_id bigint not null,
        primary key (genero_id, novel_id)
    )
Hibernate: 
    alter table if exists tbl_chapter 
       add constraint FKhpvq0gsfe3oj63l3swghvw9rf 
       foreign key (novel_id) 
       references tbl_novel
Hibernate: 
    alter table if exists tbl_comment 
       add constraint FKdepwa7n7att018i5v5kjeeh6j 
       foreign key (author_id) 
       references tbl_author
Hibernate: 
    alter table if exists tbl_comment_chapter 
       add constraint FKncno91pcd84pmtrm1rl1j0g0 
       foreign key (chapter_id) 
       references tbl_chapter
Hibernate: 
    alter table if exists tbl_comment_chapter 
       add constraint FKf4sk68u8th10vwp186fab0pi2 
       foreign key (author_id) 
       references tbl_author
Hibernate: 
    alter table if exists tbl_comment_novel 
       add constraint FK6wp254lh61v2ob87pef1mhrgs 
       foreign key (novel_id) 
       references tbl_novel
Hibernate: 
    alter table if exists tbl_comment_novel 
       add constraint FKk7ry1inp8m60kqq40fvhghh9g 
       foreign key (author_id) 
       references tbl_author
Hibernate: 
    alter table if exists tbl_novel 
       add constraint FKjfkk9l7dj3k0urdts5c83wu0d 
       foreign key (author_id) 
       references tbl_author
Hibernate: 
    alter table if exists tbl_novel_genero 
       add constraint FK1myiime1ltys91o6ny0yumh9h 
       foreign key (genero_id) 
       references tbl_gender
Hibernate: 
    alter table if exists tbl_novel_genero 
       add constraint FKk6yk20okx7g8blnoootopww63 
       foreign key (novel_id) 
       references tbl_novel
2025-07-07T19:37:02.803-03:00  INFO 17416 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07T19:37:03.059-03:00  INFO 17416 --- [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name authorDetailsService
2025-07-07T19:37:03.096-03:00  WARN 17416 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07T19:37:03.441-03:00  INFO 17416 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07T19:37:03.604-03:00  INFO 17416 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-07-07T19:37:03.605-03:00  INFO 17416 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-07-07T19:37:03.607-03:00  INFO 17416 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-07-07T19:37:03.660-03:00  INFO 17416 --- [           main] c.n.b.controllers.AuthControllerTest     : Started AuthControllerTest in 2.778 seconds (process running for 32.518)
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        g1_0.id,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_gender
        (gender_type, id) 
    values
        (?, ?)
Hibernate: 
    select
        a1_0.id 
    from
        tbl_author a1_0 
    where
        a1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        tbl_author
        (date_registrion, email, name, password, role, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id 
    from
        tbl_author a1_0 
    where
        a1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        tbl_author
        (date_registrion, email, name, password, role, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id 
    from
        tbl_author a1_0 
    where
        a1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        tbl_author
        (date_registrion, email, name, password, role, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id 
    from
        tbl_author a1_0 
    where
        a1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        tbl_author
        (date_registrion, email, name, password, role, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        n1_0.id 
    from
        tbl_novel n1_0 
    where
        n1_0.novel_name=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel
        (author_id, date_registrion, image_uri, novel_name, synopsis, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    select
        n1_0.id 
    from
        tbl_novel n1_0 
    where
        n1_0.novel_name=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel
        (author_id, date_registrion, image_uri, novel_name, synopsis, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    select
        n1_0.id 
    from
        tbl_novel n1_0 
    where
        n1_0.novel_name=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel
        (author_id, date_registrion, image_uri, novel_name, synopsis, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    select
        n1_0.id 
    from
        tbl_novel n1_0 
    where
        n1_0.novel_name=? 
    fetch
        first ? rows only
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel
        (author_id, date_registrion, image_uri, novel_name, synopsis, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    select
        null,
        g1_0.gender_type 
    from
        tbl_gender g1_0 
    where
        g1_0.id=?
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tbl_novel_genero
        (novel_id, genero_id) 
    values
        (?, ?)
Hibernate: 
    select
        n1_0.id,
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username,
        n1_0.date_registrion,
        n1_0.image_uri,
        n1_0.novel_name,
        n1_0.synopsis 
    from
        tbl_novel n1_0 
    left join
        tbl_author a1_0 
            on a1_0.id=n1_0.author_id 
    where
        n1_0.id=?
Hibernate: 
    SELECT
        MAX(c.chapter_number) 
    FROM
        TBL_CHAPTER c 
    WHERE
        c.NOVEL_ID = ? 
Hibernate: 
    insert 
    into
        tbl_chapter
        (chapter_number, chapter_text, date_registration, novel_id, title, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        n1_0.id,
        n1_0.author_id,
        n1_0.date_registrion,
        n1_0.image_uri,
        n1_0.novel_name,
        n1_0.synopsis 
    from
        tbl_novel n1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.id=?
Hibernate: 
    delete 
    from
        tbl_novel_genero 
    where
        novel_id=?
Hibernate: 
    delete 
    from
        tbl_novel_genero 
    where
        novel_id=?
Hibernate: 
    delete 
    from
        tbl_novel_genero 
    where
        novel_id=?
Hibernate: 
    delete 
    from
        tbl_novel_genero 
    where
        novel_id=?
Hibernate: 
    delete 
    from
        tbl_novel 
    where
        id=?
2025-07-07T19:37:04.732-03:00  WARN 17416 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23503, SQLState: 23503
2025-07-07T19:37:04.733-03:00 ERROR 17416 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Referential integrity constraint violation: "FKHPVQ0GSFE3OJ63L3SWGHVW9RF: PUBLIC.TBL_CHAPTER FOREIGN KEY(NOVEL_ID) REFERENCES PUBLIC.TBL_NOVEL(ID) (CAST(1 AS BIGINT))"; SQL statement:
delete from tbl_novel where id=? [23503-232]
]]></system-out>
  </testcase>
  <testcase name="login" classname="com.novelsbr.backend.controllers.AuthControllerTest" time="0.812">
    <failure message="Status expected:&lt;200&gt; but was:&lt;403&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<403>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:640)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.novelsbr.backend.controllers.AuthControllerTest.login(AuthControllerTest.java:89)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.date_registrion,
        a1_0.email,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.username 
    from
        tbl_author a1_0 
    where
        a1_0.username=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /auth/login
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"37"]
             Body = {"login":"AllStar","password":"1234"}
    Session Attrs = {}

Handler:
             Type = com.novelsbr.backend.web.controllers.AuthController
           Method = com.novelsbr.backend.web.controllers.AuthController#login(LoginRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>