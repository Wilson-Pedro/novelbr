<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.client.HttpStatusCodeException"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.LoginRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.UserRole"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.WebMvcConfigurer"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EnumType"/>
    <fullyQualifiedTypeName name="javax.security.auth.x500.X500Principal"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.TestMethodOrder"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.MethodOrderer"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.MethodOrderer.OrderAnnotation"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.AuthorNovelMinDTO"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.Gender"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.Chapter"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.ChapterDTO"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.ChapterRepository"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.ChapterService"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.ExistingEntityException"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.ProblamDTO"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.ExistingAuthorException"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.AuthorRepository"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.AuthorDTO"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.GenderType"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Order"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.NovelRepository"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.NovelDTO"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.NovelService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.AuthorService"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EntityNotFoundException"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.EntityNotFoundException"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.GenderDTO"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.CardNovelDTO"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.NotFoundException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
</qualifiedTypeNameHistroy>
