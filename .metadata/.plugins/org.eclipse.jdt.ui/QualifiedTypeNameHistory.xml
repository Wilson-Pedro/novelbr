<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.CommentNovel"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.CommentChapter"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.ChapterService"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.AuthorService"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EnumType"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.ChapterDTO"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonBackReference"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonManagedReference"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.Comment"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.utils.mapper.CommentMapper"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.CommentMinDTO"/>
    <fullyQualifiedTypeName name="org.yaml.snakeyaml.comments.CommentType"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.CommentType"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.ChapterRepository"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Enumerated"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.cfg.ConstructorDetector.SingleArgConstructor"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.NovelStatus"/>
    <fullyQualifiedTypeName name="jakarta.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.NovelService"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.NovelStatusRepository"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.NotFoundException"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.NovelStatusService"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.entities.NovelStatus"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.projections.CommentProjection"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.CommentDTO"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.CommentBy"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.services.CommentService"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.repositories.CommentRepository"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.AuthorDTO"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.enums.NovelStatusType"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PatchMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.records.ChangeStatusNovelRequest"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.exceptions.NullFieldException"/>
    <fullyQualifiedTypeName name="com.novelsbr.backend.domain.dto.NovelDTO"/>
    <fullyQualifiedTypeName name="com.google.common.base.Objects"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
    <fullyQualifiedTypeName name="org.springframework.data.domain.Page"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="org.springframework.mock.web.MockMultipartFile"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
</qualifiedTypeNameHistroy>
