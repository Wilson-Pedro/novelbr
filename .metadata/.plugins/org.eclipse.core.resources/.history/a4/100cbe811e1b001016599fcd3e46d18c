package com.novelsbr.backend.services.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.novelsbr.backend.domain.dto.AuthorDTO;
import com.novelsbr.backend.domain.entities.Author;
import com.novelsbr.backend.repositories.AuthorRepository;
import com.novelsbr.backend.services.AuthorService;

@Service
public class AuthorServiceImpl implements AuthorService {
	
	@Autowired
	private AuthorRepository authorRepository;

//	@Override
//	public User save(UserDTO userDTO) {
//		User userSaved = new User(userDTO);
//		String passwordEncrypt = new BCryptPasswordEncoder().encode(userDTO.getPassword());
//		userSaved.setPassword(passwordEncrypt);
//		return authorRepository.save(userSaved);
//	}

	@Override
	public Author save(AuthorDTO authorDTO) {
		return authorRepository.save(new Author(authorDTO));
	}
//
//	@Override
//	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
////		return userRepository.findAll().stream()
////				.filter(user -> user.getEmail().equals(email))
////				.findFirst()
////				.map(user -> User);
//		return null;
//	}
//
}
