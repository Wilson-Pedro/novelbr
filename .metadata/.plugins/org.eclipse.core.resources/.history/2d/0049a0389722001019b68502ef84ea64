package com.novelsbr.backend.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.novelsbr.backend.domain.dto.NovelDTO;
import com.novelsbr.backend.domain.entities.Novel;
import com.novelsbr.backend.domain.projections.AuthorNovelMinProjection;
import com.novelsbr.backend.services.NovelService;

@RestController
@RequestMapping("/novels")
@CrossOrigin("http://localhost:3000")
public class NovelController {
	
	@Autowired
	private NovelService novelService;
	
	@GetMapping()
	public ResponseEntity<List<NovelDTO>> findAll() {
		List<Novel> novels = novelService.findAll();
		List<NovelDTO> novlesDTO = novels.stream().map(x -> new NovelDTO(x)).toList();
		return ResponseEntity.ok(novlesDTO);
	}

	@PostMapping("/")
	public ResponseEntity<NovelDTO> save(@RequestBody NovelDTO novelDTO) {
		Novel novel = novelService.save(novelDTO);
		return ResponseEntity.status(201).body(new NovelDTO(novel));
	}
	
	@GetMapping("/novelCards")
	public ResponseEntity<List<AuthorNovelMinProjection>> findNovelCards() {
		return ResponseEntity.ok(novelService.findNovelCards());
	}
	
	@GetMapping("/novelCards/{novelId}")
	public ResponseEntity<AuthorNovelMinProjection> findNovelInfoByNovelId(@PathVariable Long novelId) {
		return ResponseEntity.ok(novelService.findNovelCards());
	}
}
