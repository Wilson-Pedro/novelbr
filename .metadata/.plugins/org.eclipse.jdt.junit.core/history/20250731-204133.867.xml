<?xml version="1.0" encoding="UTF-8"?><testrun name="CommentServiceTest" project="backend" tests="4" started="4" failures="1" errors="3" ignored="0">
  <testsuite name="com.novelsbr.backend.services.CommentServiceTest" time="3.459" displayname="CommentServiceTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.services.CommentServiceTest]">
    <testcase name="preparingTestEnvironment" classname="com.novelsbr.backend.services.CommentServiceTest" time="3.038" displayname="preparingTestEnvironment()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.services.CommentServiceTest]/[method:preparingTestEnvironment()]">
      <error>org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientObjectException: persistent instance references an unsaved transient instance of 'com.novelsbr.backend.domain.entities.NovelStatus' (save the transient instance before flushing)&#13;
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)&#13;
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)&#13;
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)&#13;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)&#13;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)&#13;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)&#13;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)&#13;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)&#13;
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)&#13;
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)&#13;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)&#13;
	at jdk.proxy2/jdk.proxy2.$Proxy148.save(Unknown Source)&#13;
	at com.novelsbr.backend.services.CommentServiceTest.preparingTestEnvironment(CommentServiceTest.java:83)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
Caused by: java.lang.IllegalStateException: org.hibernate.TransientObjectException: persistent instance references an unsaved transient instance of 'com.novelsbr.backend.domain.entities.NovelStatus' (save the transient instance before flushing)&#13;
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)&#13;
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)&#13;
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)&#13;
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1433)&#13;
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491)&#13;
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354)&#13;
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978)&#13;
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)&#13;
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)&#13;
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)&#13;
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)&#13;
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)&#13;
	... 16 more&#13;
Caused by: org.hibernate.TransientObjectException: persistent instance references an unsaved transient instance of 'com.novelsbr.backend.domain.entities.NovelStatus' (save the transient instance before flushing)&#13;
	at org.hibernate.engine.spi.CascadingActions$9.cascade(CascadingActions.java:382)&#13;
	at org.hibernate.engine.spi.CascadingActions$9.cascade(CascadingActions.java:372)&#13;
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:570)&#13;
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:492)&#13;
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:253)&#13;
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:192)&#13;
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:169)&#13;
	at org.hibernate.event.internal.AbstractFlushingEventListener.preFlush(AbstractFlushingEventListener.java:107)&#13;
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)&#13;
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)&#13;
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)&#13;
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429)&#13;
	... 24 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="save" classname="com.novelsbr.backend.services.CommentServiceTest" time="0.164" displayname="save()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.services.CommentServiceTest]/[method:save()]">
      <error>java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0&#13;
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)&#13;
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)&#13;
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)&#13;
	at java.base/java.util.Objects.checkIndex(Objects.java:359)&#13;
	at java.base/java.util.ArrayList.get(ArrayList.java:427)&#13;
	at com.novelsbr.backend.services.CommentServiceTest.save(CommentServiceTest.java:92)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</error>
    </testcase>
    <testcase name="findAll" classname="com.novelsbr.backend.services.CommentServiceTest" time="0.197" displayname="findAll()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.services.CommentServiceTest]/[method:findAll()]">
      <failure>
        <expected>false</expected>
        <actual>true</actual>
        org.opentest4j.AssertionFailedError: expected: &lt;false&gt; but was: &lt;true&gt;&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api.AssertFalse.failNotFalse(AssertFalse.java:63)&#13;
	at org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:36)&#13;
	at org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:31)&#13;
	at org.junit.jupiter.api.Assertions.assertFalse(Assertions.java:231)&#13;
	at com.novelsbr.backend.services.CommentServiceTest.findAll(CommentServiceTest.java:119)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="findAllNovelsByEntityId" classname="com.novelsbr.backend.services.CommentServiceTest" time="0.051" displayname="findAllNovelsByEntityId()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.services.CommentServiceTest]/[method:findAllNovelsByEntityId()]">
      <error>java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0&#13;
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)&#13;
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)&#13;
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)&#13;
	at java.base/java.util.Objects.checkIndex(Objects.java:359)&#13;
	at java.base/java.util.ArrayList.get(ArrayList.java:427)&#13;
	at com.novelsbr.backend.services.CommentServiceTest.findAllNovelsByEntityId(CommentServiceTest.java:128)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
