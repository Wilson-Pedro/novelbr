<?xml version="1.0" encoding="UTF-8"?><testrun name="com.novelsbr.backend.controllers" project="backend" tests="14" started="14" failures="1" errors="1" ignored="0">
  <testsuite name="com.novelsbr.backend.controllers.ChapterControllerTest" time="50.846" displayname="ChapterControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.ChapterControllerTest]">
    <testcase name="preparingTestEnvironment" classname="com.novelsbr.backend.controllers.ChapterControllerTest" time="48.166" displayname="preparingTestEnvironment()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.ChapterControllerTest]/[method:preparingTestEnvironment()]"/>
    <testcase name="getToken" classname="com.novelsbr.backend.controllers.ChapterControllerTest" time="0.396" displayname="getToken()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.ChapterControllerTest]/[method:getToken()]">
      <error>org.springframework.security.authentication.BadCredentialsException: Usuário inexistente ou senha inválida&#13;
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93)&#13;
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)&#13;
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)&#13;
	at com.novelsbr.backend.controllers.ChapterControllerTest.getToken(ChapterControllerTest.java:113)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</error>
    </testcase>
    <testcase name="save" classname="com.novelsbr.backend.controllers.ChapterControllerTest" time="2.279" displayname="save()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.ChapterControllerTest]/[method:save()]">
      <failure>java.lang.AssertionError: Status expected:&lt;201&gt; but was:&lt;403&gt;&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)&#13;
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:640)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)&#13;
	at com.novelsbr.backend.controllers.ChapterControllerTest.save(ChapterControllerTest.java:137)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
  <testsuite name="com.novelsbr.backend.controllers.GenderControllerTest" time="1.096" displayname="GenderControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.GenderControllerTest]">
    <testcase name="preparingTestEnvironment" classname="com.novelsbr.backend.controllers.GenderControllerTest" time="0.073" displayname="preparingTestEnvironment()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.GenderControllerTest]/[method:preparingTestEnvironment()]"/>
    <testcase name="getToken" classname="com.novelsbr.backend.controllers.GenderControllerTest" time="0.465" displayname="getToken()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.GenderControllerTest]/[method:getToken()]"/>
    <testcase name="findAll" classname="com.novelsbr.backend.controllers.GenderControllerTest" time="0.553" displayname="findAll()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.GenderControllerTest]/[method:findAll()]"/>
  </testsuite>
  <testsuite name="com.novelsbr.backend.controllers.NovelControllerTest" time="1.399" displayname="NovelControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.NovelControllerTest]">
    <testcase name="preparingTestEnvironment" classname="com.novelsbr.backend.controllers.NovelControllerTest" time="0.217" displayname="preparingTestEnvironment()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.NovelControllerTest]/[method:preparingTestEnvironment()]"/>
    <testcase name="getToken" classname="com.novelsbr.backend.controllers.NovelControllerTest" time="0.564" displayname="getToken()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.NovelControllerTest]/[method:getToken()]"/>
    <testcase name="findAll" classname="com.novelsbr.backend.controllers.NovelControllerTest" time="0.028" displayname="findAll()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.NovelControllerTest]/[method:findAll()]"/>
    <testcase name="save" classname="com.novelsbr.backend.controllers.NovelControllerTest" time="0.569" displayname="save()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.NovelControllerTest]/[method:save()]"/>
  </testsuite>
  <testsuite name="com.novelsbr.backend.controllers.AuthControllerTest" time="0.576" displayname="AuthControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthControllerTest]">
    <testcase name="save" classname="com.novelsbr.backend.controllers.AuthControllerTest" time="0.41" displayname="save()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthControllerTest]/[method:save()]"/>
    <testcase name="login" classname="com.novelsbr.backend.controllers.AuthControllerTest" time="0.164" displayname="login()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthControllerTest]/[method:login()]"/>
  </testsuite>
  <testsuite name="com.novelsbr.backend.controllers.AuthorControllerTest" time="0.266" displayname="AuthorControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthorControllerTest]">
    <testcase name="deleteAll" classname="com.novelsbr.backend.controllers.AuthorControllerTest" time="0.038" displayname="deleteAll()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthorControllerTest]/[method:deleteAll()]"/>
    <testcase name="save" classname="com.novelsbr.backend.controllers.AuthorControllerTest" time="0.226" displayname="save()" uniqueid="[engine:junit-jupiter]/[class:com.novelsbr.backend.controllers.AuthorControllerTest]/[method:save()]"/>
  </testsuite>
</testrun>
